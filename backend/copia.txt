require('dotenv').config();
const express = require('express');
const app = express();
const morgan = require('morgan');
const mongoose = require('mongoose')

//modelo
const Casos = require('./src/models/casos')

mongoose.connect('mongodb://localhost/sofia', {
    useNewUrlParser: true,
    useUnifiedTopology: true
})
    .then(db => {
        console.log('conectado a la base de datos');
    }).catch(error => {
        console.log(error);

    })
//midlewares
app.use(morgan('dev'));
app.use(express.urlencoded({ extended: false }))
app.use(express.json())

//creando el servidor
app.set("port", process.env.PORT || 3000)

const server = app.listen(app.get('port'), () => {
    console.log("server on port ", app.get('port'));
})
//archivos estaticos
app.use(express.static(__dirname + '/src/public'));
//routes
app.use(require('./src/routes/index'))
//socket escuchando eventos
const socketIO = require("socket.io");
const io = socketIO.listen(server)

io.on("connect", (socket) => {
    console.log('nueva conexion iD:' + socket.id);

    socket.on('cliente-prediccion', async (datos) => {
        const TodosSegundos = []
        const TodosMinutos = []
        const TodosDias = []
        await (await Casos.find()).forEach(caso => {

            let minutos = caso.minuto
            let segundos = caso.segundos
            let dia = caso.dia

            TodosSegundos.push(segundos)
            TodosMinutos.push(minutos);
            TodosDias.push(dia)

        })
        io.sockets.emit('acceso', {

            //array globales
            TodosMinutos: TodosMinutos,
            TodosSegundos: TodosSegundos,
            TodosDias: TodosDias

        })
        socket.on('AccesoAGuardar', (datos2) => {

            //array globales
            let minutosTodos = datos2.TodosMinutos
            let segundosTodos = datos2.TodosSegundos
            let TodosDias = datos2.TodosDias

            //comparacion si el minuto , segundo y dia actual ya tienen un caso de violencia
            let siEstrueQUeSeGuarde = minutosTodos.indexOf(new Date().getMinutes())
            let siEstrueQUeSeGuarde2 = segundosTodos.indexOf(new Date().getSeconds())

            if (siEstrueQUeSeGuarde === -1 && siEstrueQUeSeGuarde2 === -1) {
                let casos = new Casos()
                casos.nombre = datos.tipoDeCaso,
                    casos.probabilidad = datos.probability,
                    casos.dia = new Date().getDate(),
                    casos.hora = new Date().getHours(),
                    casos.minuto = new Date().getMinutes(),
                    casos.segundos = new Date().getSeconds()
                    console.log('guardado');
                    casos.save()
     
            } else {
                console.log('el dato ya existe');
            }
        })
        //enviando los mismos datos en el frontend
        io.sockets.emit('casos', datos)
        clearInterval()
    })
});

module.exports = io;
